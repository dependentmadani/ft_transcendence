// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  id          Int       @id @default(autoincrement())
  username    String    @unique
  email       String    @unique
  password    String?
  avatar      String?
  hashRt      String?
  twofa       String?
  twofaEmail  String?   @unique
  twoEnabled  Boolean   @default(false)
  friend      Users[]   @relation("friends")
  block       Users[]   @relation("friends")
  // senderMessage Message[] @relation("userSender")
  // receiverMessage Message[] @relation("userReceiver")
  messagesSent        Chat[] @relation("chatSender")
  messagesReceived    Chat[] @relation("chatReceiver")
}

model Chat {
  chatId            Int       @id @default(autoincrement())
  text          String
  sender        Users      @relation("chatSender", fields: [senderId], references: [id])
  senderId      Int
  receiver      Users      @relation("chatReceiver", fields: [receiverId], references: [id])
  receiverId    Int
}

model Room {
  roomId          Int @id @default(autoincrement())
  admins          Users[]
  members         Users[]
  bannedMembers   Users[]
}

// model Chat {
//   // createdAt     DateTime  @default(now())
//   // updatedAt     DateTime  @updatedAt
//   chatId            Int       @id @default(autoincrement())
//   sender          Users       @relation("chatSender", fields: [senderId], references: [id])
//   senderId        Int
//   receiver          Users       @relation("chatReceiver", fields: [receiverId], references: [id])
//   receiverId        Int
//   text            String
//   // user          Users     @relation(fields: [userId], references: [id]) //onDelete: Cascade "to check its usage"
//   // userId        Int
//   // banUser       Boolean
//   // muteUser      Boolean
//   // blocked_user  Boolean
//   // Message       Message[] @relation("chat")
//   // gameInvite    String?
// }

model Message {
  messageId Int @id @default(autoincrement())
  senderId  Int
  text      String
}

enum Role {
  ADMIN
  USER
}